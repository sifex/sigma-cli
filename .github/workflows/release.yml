name: Release to PyPI
on:
    release:
        types: [ published ]
    push:
        tags:
            - v*.*.*

jobs:
    build-and-publish:
        runs-on: ubuntu-20.04
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python
                uses: actions/setup-python@v2
                with:
                    python-version: '3.10'
            -   name: Install Poetry
                uses: abatilo/actions-poetry@v2.0.0
                with:
                    poetry-version: '1.3'
            -   name: Verify versioning
                run: |
                    [ "$(poetry version -s)" == "${GITHUB_REF#refs/tags/v}" ]
            -   name: Install dependencies
                run: poetry install
            -   name: Run tests
                run: poetry run pytest
            -   name: Build packages
                run: poetry build
            -   name: Configure Poetry
                run: |
                    poetry config repositories.testpypi https://test.pypi.org/legacy/
                    poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_TOKEN }}
                    poetry config pypi-token.pypi "${{ secrets.PYPI_API_TOKEN }}"
            -   name: Publish to test PyPI
                if: ${{ github.event_name == 'push' }}
                run: poetry publish -r testpypi
            -   name: Publish to PyPI
                if: ${{ github.event_name == 'release' }}
                run: poetry publish
    docker-publish:
        runs-on: ubuntu-latest
        needs: build-and-publish
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            -   name: Docker meta
                id: meta
                uses: docker/metadata-action@v4
                with:
                    # list of Docker images to use as base name for tags
                    images: SigmaHQ/sigma-cli
                    # generate Docker tags based on the following events/attributes
                    tags: |
                        type=semver,pattern={{version}}
                        type=semver,pattern={{major}}.{{minor}}
                        type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v2
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2
            -   name: Login to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}
            -   name: Build and push
                uses: docker/build-push-action@v4
                with:
                    push: true
                    context: .
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}